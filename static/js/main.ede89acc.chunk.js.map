{"version":3,"sources":["components/RadioToggle.tsx","components/AppHeader.tsx","components/MovieCard.tsx","components/AppMainContent.tsx","components/AppFooter.tsx","App.tsx","index.tsx"],"names":["RadioToggle","props","ButtonGroup","options","map","option","idx","ToggleButton","type","id","key","value","variant","name","checked","currentState","onChange","e","setState","currentTarget","className","icon","notYetImplemented","event","preventDefault","window","alert","AppHeader","Navbar","sticky","expand","bg","Form","onSubmit","listLayoutOptions","currentListLayout","setCurrentListLayout","FormControl","placeholder","listOptions","visibleList","setVisibleList","MovieCard","Card","style","maxHeight","ImgOverlay","title","year","Image","fluid","src","poster","width","height","objectFit","AppMainContent","Container","Col","as","xs","listTitle","Row","sm","md","lg","xl","xxl","listContent","index","onClick","addFavourite","String","imdbID","AppFooter","Button","open","rawResponse","App","useState","favouritesList","setFavouritesList","movieList","Search","Title","Year","Poster","filter","item","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ede89acc.chunk.js","sourcesContent":["import React, {FC} from \"react\";\r\nimport {ButtonGroup, ToggleButton} from \"react-bootstrap\";\r\n\r\ninterface iKeyValue {\r\n    key: string,\r\n    value: string,\r\n    icon?: FC\r\n}\r\n\r\ninterface iRadioToggle {\r\n    name: string,\r\n    options: iKeyValue[],\r\n    currentState: string,\r\n    setState:  React.Dispatch<React.SetStateAction<string>>,\r\n}\r\n\r\nconst RadioToggle: FC<iRadioToggle> = (props: iRadioToggle) => {\r\n    return (\r\n\r\n        <ButtonGroup >\r\n            {props.options.map((option: iKeyValue, idx: number) => (\r\n                <ToggleButton\r\n                    type=\"radio\"\r\n                    key={idx}\r\n                    id={option.key}\r\n                    value={option.key}\r\n                    variant={\"outline-light\"}\r\n                    name={option.key}\r\n                    checked={props.currentState === option.key}\r\n                    onChange={(e) => props.setState(e.currentTarget.value)}\r\n                    className=\"pt-1 pb-2 \"\r\n                >\r\n                    {option.icon ? option.icon : option.value}\r\n                </ToggleButton>\r\n            ))}\r\n        </ButtonGroup>\r\n\r\n    );\r\n};\r\n\r\nexport default RadioToggle;\r\n\r\n\r\n","import {FC} from \"react\";\r\nimport {Form, FormControl, Navbar} from \"react-bootstrap\";\r\n\r\nimport RadioToggle from \"./RadioToggle\";\r\n\r\n\r\ninterface keyValueIcon {\r\n    key: string,\r\n    value: string,\r\n    icon: any\r\n}\r\n\r\ntype tAppHeader = {\r\n    listLayoutOptions: keyValueIcon[],\r\n    currentListLayout: string,\r\n    setCurrentListLayout:  React.Dispatch<React.SetStateAction<string>>,\r\n\r\n    listOptions: keyValueIcon[],\r\n    visibleList: string,\r\n    setVisibleList:  React.Dispatch<React.SetStateAction<string>>,\r\n}\r\n\r\nconst notYetImplemented = (event: any) => {\r\n    event.preventDefault()\r\n    window.alert('NOT IMPLEMENTED YET')\r\n}\r\n\r\nconst AppHeader: FC<tAppHeader> = (props: tAppHeader) => {\r\n\r\n    return (\r\n\r\n        <Navbar sticky=\"top\" expand=\"md\" bg=\"dark\" className=\"mb-3 shadow\">\r\n            <Form className=\"container d-flex flex-row flex-nowrap justify-content-between align-items-center\"\r\n                onSubmit={notYetImplemented}\r\n            >\r\n\r\n                <div className=\"d-none d-sm-inline-block\">\r\n                    <RadioToggle name={`ViewMode`} options={props.listLayoutOptions} currentState={props.currentListLayout} setState={props.setCurrentListLayout} />\r\n                </div>\r\n\r\n\r\n                {/*<div className=\"flex-grow-1\">*/}\r\n                    <FormControl\r\n                        type=\"search\"\r\n                        placeholder=\"Search by Title\"\r\n                        // className=\"mx-1 mx-sm-2 mx-md-3 mx-lg-4 mx-xl-5 text-center\"\r\n                        className=\"mx-1 mx-sm-2 mx-md-3 mx-lg-4 mx-xl-5 text-center flex-grow-1\"\r\n                        aria-label=\"Search\"\r\n                    />\r\n                {/*</div>*/}\r\n\r\n\r\n                <RadioToggle name={`ListName`} options={props.listOptions} currentState={props.visibleList} setState={props.setVisibleList} />\r\n\r\n            </Form>\r\n\r\n        </Navbar>\r\n\r\n    );\r\n};\r\n\r\nexport default AppHeader;\r\n\r\n\r\n","import {FC} from \"react\";\r\nimport {Card, Image} from \"react-bootstrap\";\r\n\r\nimport './MovieCard.css'\r\n\r\ninterface iMovieCard {\r\n    title: string,\r\n    year: string,\r\n    poster: string,\r\n};\r\n\r\n// const notYetImplemented = (event: any) => {\r\n//     event.preventDefault()\r\n//     window.alert('NOT IMPLEMENTED YET')\r\n// }\r\n\r\nconst MovieCard: FC<iMovieCard> = (props: iMovieCard) => {\r\n    return (\r\n        <Card className=\"my-2 d-flex flex-row flex-grow-0 flex-shrink-0\" style={{maxHeight: 'min-content'}}>\r\n            <Card.ImgOverlay className=\"d-flex flex-col flex-fill flex text-light align-items-baseline darkenCardImg px-1 px-sm-1 px-md-2 px-lg-3 w-100\">\r\n                <h1 className=\"h3 ml-2 mr-3 flex-grow-1 text-nowrap text-truncate\">{props.title}</h1>\r\n                <h3 className=\"h6 ml-3 mr-2\">{props.year}</h3>\r\n            </Card.ImgOverlay>\r\n            <Image fluid src={props.poster} className=\"card-img\" style={{width: '100%', height: '260px', objectFit: 'cover'}}/>\r\n        </Card>\r\n    );\r\n};\r\n\r\n\r\nexport default MovieCard;","import {FC} from \"react\";\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\n\r\nimport MovieCard from \"./MovieCard\";\r\nimport './MovieCard.css';\r\n\r\ninterface movie {\r\n    title: string,\r\n    year: string,\r\n    poster: string,\r\n    imdbID: string\r\n}\r\n\r\ninterface iMainContent {\r\n    listTitle: string,\r\n    listContent: movie[],\r\n    addFavourite?: any\r\n}\r\n\r\nconst AppMainContent: FC<iMainContent> = (props) => {\r\n    return (\r\n        <Container className=\"shadow bg-white py-3\" >\r\n            <Col as=\"section\" id=\"list-of-movies\" xs={12} className=\"mx-0 px-1 px-md-3 px-lg-3 text-center\">\r\n                <h1 className=\" mb-3\">{props.listTitle}</h1>\r\n                <Row as=\"ul\" xs={1} sm={2} md={2} lg={2} xl={3} xxl={4} className=\"list-unstyled text-center d-flex\" >\r\n                    {\r\n                        props.listContent.map((value, index) => (\r\n                                    // do we need a uuid for the key / id ?\r\n                                    <Col as=\"li\"\r\n                                         onClick={(event: any) => {\r\n                                            props.addFavourite(event.currentTarget.id)\r\n                                         }}\r\n                                         id={String(value.imdbID)} key={String(value.imdbID)}\r\n                                         xs={12} md={6} xl={4} xxl={3} className=\"mx-auto mx-md-0 px-2 px-sm-2 px-md-3 px-lg-4 \" >\r\n                                        <MovieCard title={value.title} year={value.year} poster={value.poster} />\r\n                                    </Col>\r\n                            )\r\n                        )\r\n                    }\r\n                </Row>\r\n            </Col>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AppMainContent\r\n","import {FC} from \"react\";\r\nimport {Button, Col, Row} from \"react-bootstrap\";\r\n\r\n\r\nconst AppFooter: FC = () => {\r\n    return (\r\n        <>\r\n            <hr className=\"my-5\"/>\r\n            <Row as=\"section\" className=\"text-center my-5\">\r\n                <Col>\r\n                    <h2 className=\"h5\">\r\n                        View code on Github\r\n                    </h2>\r\n                    <Button variant=\"outline-primary\"\r\n                            className=\"mt-2\"\r\n                            onClick={() => {window.open(\"https://github.com/carljdp/hyperboliq-favourites#readme\")}}\r\n                    >\r\n                        carljdp/hyperboliq-favourites\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row as=\"section\" className=\"text-center my-5\">\r\n                <p>\r\n                    Built with React + <code>react-bootstrap</code> + <code>react-icons</code> using TypeScript\r\n                </p>\r\n            </Row>\r\n\r\n\r\n        </>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AppFooter;\r\n\r\n\r\n","import {FC, useState} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport {FaBars, FaSearch, FaStar, FaThLarge} from \"react-icons/all\";\n\nimport AppHeader from \"./components/AppHeader\";\nimport AppMainContent from \"./components/AppMainContent\";\nimport AppFooter from \"./components/AppFooter\";\n\nimport rapid_searchByTitle_testData from './testData/SearchByTitle.json';\n\ninterface rapid_searchByTitle_movie {\n    Title: string\n    Year: string\n    imdbID: string\n    Type: string\n    Poster: string\n}\ninterface rapid_searchByTitle_json {\n    Search?: rapid_searchByTitle_movie[],\n    totalResults?: string,\n    Response?: string,\n}\n\ninterface keyValueIcon {\n    key: string,\n    value: string,\n    icon: any\n}\n\ninterface movie {\n    title: string,\n    year: string,\n    poster: string,\n    imdbID: string\n}\n\nconst rawResponse: rapid_searchByTitle_json = rapid_searchByTitle_testData;\n\n\nconst App: FC = () => {\n\n    // init to empty\n    const [favouritesList, setFavouritesList] = useState(() => [])\n\n    const listLayoutOptions: keyValueIcon[] = [\n        {\n            key: 'list',\n            value: 'List View',\n            icon: <FaBars />\n        },\n        {\n            key: 'grid',\n            value: 'Grid View',\n            icon: <FaThLarge />\n        },\n    ]\n    // init to 'list', not 'grid'\n    const [currentListLayout, setCurrentListLayout] = useState(() => listLayoutOptions[0].key)\n\n    const listOptions: keyValueIcon[] = [\n        {\n            key: 'search',\n            value: 'Search Results',\n            icon: <FaSearch />\n        },\n        {\n            key: 'favourites',\n            value: 'My Favourites',\n            icon: <FaStar />\n        }\n    ]\n    // init to 'search', not 'favourites'\n    const [visibleList, setVisibleList] = useState(() => listOptions[0].key)\n\n    // normalize / populate with test data\n    const movieList: movie[] = (rawResponse.Search || []).map((value: rapid_searchByTitle_movie): movie => {\n        return {\n            title: value.Title || '',\n            year: value.Year || '',\n            poster: value.Poster || '',\n            imdbID: value.imdbID\n        }\n    })\n\n    return (\n\n        <Container fluid className={`m-0 p-0 bg-${visibleList === 'search' ? 'light' : 'warning'}`}>\n\n            <AppHeader\n                currentListLayout={currentListLayout}\n                setCurrentListLayout={setCurrentListLayout}\n                listLayoutOptions={listLayoutOptions}\n\n                visibleList={visibleList}\n                setVisibleList={setVisibleList}\n                listOptions={listOptions}\n            />\n\n            <AppMainContent\n\n                // Way too complicated reverse lookup to find value 'Search Results' from key 'search' !\n                listTitle={listOptions.filter(item => item.key === visibleList)[0].value}\n\n                listContent={visibleList === 'search' ? movieList : favouritesList}\n                addFavourite={setFavouritesList}\n            />\n\n\n            <AppFooter/>\n\n        </Container>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}